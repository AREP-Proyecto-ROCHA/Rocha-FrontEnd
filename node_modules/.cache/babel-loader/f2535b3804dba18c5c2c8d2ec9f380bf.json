{"ast":null,"code":"import _classCallCheck from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/martin/Escritorio/Rocha-FrontEnd/src/Diligencias/Diligence.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./diligence.css\";\nimport { CardHeader } from \"@material-ui/core\";\nimport EventAvailableSharp from \"@material-ui/icons/EventAvailableSharp\";\nimport InfoRounded from \"@material-ui/icons/InfoRounded\";\nimport WarningRounded from \"@material-ui/icons/WarningRounded\";\n\nvar Diligence =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Diligence, _React$Component);\n\n  function Diligence() {\n    _classCallCheck(this, Diligence);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Diligence).apply(this, arguments));\n  }\n\n  _createClass(Diligence, [{\n    key: \"render\",\n    value: function render() {\n      var statusIcon;\n\n      if (this.props.cardInfo.type === \"Warning\") {\n        statusIcon = React.createElement(WarningRounded, {\n          className: \"status\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        });\n      } else if (this.props.cardInfo.type === \"Info\") {\n        statusIcon = React.createElement(InfoRounded, {\n          className: \"status\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      } else {\n        statusIcon = React.createElement(EventAvailableSharp, {\n          className: \"status\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      }\n\n      var padding = \"40%\";\n\n      if (this.props.cardInfo.imageURL === \"undefined\") {\n        padding = \"0%\";\n      }\n\n      var mediaClass = {\n        \"height\": 0,\n        \"paddingTop\": padding\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        action: statusIcon,\n        title: React.createElement(Typography, {\n          variant: \"h5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, this.props.cardInfo.title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(CardMedia, {\n        style: mediaClass,\n        image: this.props.cardInfo.imageURL,\n        title: \"Imagen Proceso\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"pos\",\n        color: \"textPrimary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.props.cardInfo.publisher)), React.createElement(Typography, {\n        className: \"pos\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.cardInfo.email)), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.cardInfo.content), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Toda la informaci\\xF3n \", React.createElement(\"a\", {\n        href: this.props.cardInfo.infoURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"AQU\\xCD\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Diligence;\n}(React.Component);\n\nexport default Diligence;","map":{"version":3,"sources":["/home/martin/Escritorio/Rocha-FrontEnd/src/Diligencias/Diligence.js"],"names":["React","Card","CardContent","CardMedia","Typography","CardHeader","EventAvailableSharp","InfoRounded","WarningRounded","Diligence","statusIcon","props","cardInfo","type","padding","imageURL","mediaClass","title","publisher","email","content","infoURL","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./diligence.css\";\nimport { CardHeader } from \"@material-ui/core\";\nimport EventAvailableSharp from \"@material-ui/icons/EventAvailableSharp\";\nimport InfoRounded from \"@material-ui/icons/InfoRounded\";\nimport WarningRounded from \"@material-ui/icons/WarningRounded\";\n\nclass Diligence extends React.Component {\n    render() {\n        var statusIcon;\n        if (this.props.cardInfo.type === \"Warning\") {\n            statusIcon = (<WarningRounded className=\"status\" color=\"primary\" />);\n        } else if(this.props.cardInfo.type === \"Info\") {\n            statusIcon = (<InfoRounded className=\"status\" color=\"primary\" />);\n        } else {\n            statusIcon = (<EventAvailableSharp className=\"status\" color=\"primary\" />);\n        }\n        var padding = \"40%\";\n        if (this.props.cardInfo.imageURL === \"undefined\") {\n            padding = \"0%\";\n        }\n        const mediaClass = {\"height\": 0, \"paddingTop\": padding};\n\n        return (\n            <div>\n                <Card className=\"card\">\n                    <CardHeader\n                        action={statusIcon}\n                        title={\n                            <Typography variant=\"h5\">\n                             {this.props.cardInfo.title}\n                            </Typography>\n                        }\n                    />\n                    <CardMedia\n                        style={mediaClass}\n                        image={this.props.cardInfo.imageURL}\n                        title=\"Imagen Proceso\"\n                    />\n                    <CardContent>\n                        <Typography className=\"pos\" color=\"textPrimary\">\n                            <b>{this.props.cardInfo.publisher}</b>\n                        </Typography>\n                        <Typography className=\"pos\" color=\"textSecondary\" >\n                            <small>{this.props.cardInfo.email}</small>\n                        </Typography>\n                        <Typography>\n                            {this.props.cardInfo.content}\n                        </Typography>\n                        <Typography>\n                            Toda la información <a href={this.props.cardInfo.infoURL}>AQUÍ</a>\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <br></br>\n            </div>\n        );\n    }\n}\n\nexport default Diligence;"]},"metadata":{},"sourceType":"module"}