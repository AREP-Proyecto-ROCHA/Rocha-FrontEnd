{"ast":null,"code":"import _objectSpread from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/martin/Escritorio/Rocha-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/martin/Escritorio/Rocha-FrontEnd/src/ComponentsMap/MapView.js\";\nimport React, { Component } from \"react\";\nimport MapComponent from \"./Map\";\nimport PointList from \"./PointsList\";\nimport axios from \"axios\";\n\nvar MapView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapView, _Component);\n\n  function MapView(props) {\n    var _this;\n\n    _classCallCheck(this, MapView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapView).call(this, props));\n\n    _this.delayedShowMarker = function () {\n      setTimeout(function () {\n        _this.getGeoLocation();\n\n        _this.setState({\n          isMarkerShown: true\n        });\n      }, 5000);\n    };\n\n    _this.handleMarkerClick = function () {\n      _this.delayedShowMarker();\n    };\n\n    _this.getGeoLocation = function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          _this.setState(function (prevState) {\n            return {\n              currentLatLng: _objectSpread({}, prevState.currentLatLng, {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              })\n            };\n          });\n        });\n      } else {\n        console.log(\"ERROR GETTING LOCATION\");\n      }\n    };\n\n    _this.state = {\n      currentLatLng: {\n        lat: 0,\n        lng: 0\n      },\n      isMarkerShown: false,\n      loaded: false,\n      markerList: []\n    };\n\n    _this.createAxiosInstance();\n\n    return _this;\n  }\n\n  _createClass(MapView, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      this.getGeoLocation();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.delayedShowMarker();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.loaded = false;\n    }\n  }, {\n    key: \"createAxiosInstance\",\n    value: function createAxiosInstance(token) {\n      axiosInstance = axios.create({\n        baseURL: apiURL,\n        timeout: 1000,\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loaded === false) {\n        this.getPointsFromApi();\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Loading!\");\n      } else {\n        return React.createElement(MapComponent, {\n          isMarkerShown: this.state.isMarkerShown,\n          onMarkerClick: this.handleMarkerClick,\n          currentLocation: this.state.currentLatLng,\n          markers: React.createElement(PointList, {\n            pointsList: this.state.markerList,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"getPointsFromApi\",\n    value: function getPointsFromApi() {\n      var _this2 = this;\n\n      var markerList = [];\n      axiosInstance.get(\"/map/points\").then(function (response) {\n        markerList = response.data;\n\n        _this2.setState({\n          markerList: markerList\n        });\n\n        localStorage.setItem(\"Markers\", markerList);\n\n        _this2.setState({\n          loaded: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return MapView;\n}(Component);\n\nexport default MapView;\nvar apiURL = window.location.hostname === \"localhost\" ? \"http://localhost:8080\" : \"https://myuniapp-back.herokuapp.com\";\nvar axiosInstance;","map":{"version":3,"sources":["/home/martin/Escritorio/Rocha-FrontEnd/src/ComponentsMap/MapView.js"],"names":["React","Component","MapComponent","PointList","axios","MapView","props","delayedShowMarker","setTimeout","getGeoLocation","setState","isMarkerShown","handleMarkerClick","navigator","geolocation","getCurrentPosition","position","prevState","currentLatLng","lat","coords","latitude","lng","longitude","console","log","state","loaded","markerList","createAxiosInstance","token","axiosInstance","create","baseURL","apiURL","timeout","headers","getPointsFromApi","get","then","response","data","localStorage","setItem","catch","error","window","location","hostname"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MapComponent from \"./Map\";\nimport PointList from \"./PointsList\";\nimport axios from \"axios\";\n\n\nclass MapView extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        currentLatLng: {\n            lat: 0,\n            lng: 0\n        },\n        isMarkerShown: false,\n         loaded : false,\n        markerList: []\n        };\n\n\n\n        this.createAxiosInstance();\n\n    }\n\n    componentWillUpdate() {\n        this.getGeoLocation();\n    }\n\n    componentDidMount() {\n\n        this.delayedShowMarker();\n\n    }\n    componentWillUnmount() {\n        this.loaded = false;\n    }\n\n    delayedShowMarker = () => {\n        setTimeout(() => {\n        this.getGeoLocation();\n        this.setState({ isMarkerShown: true });\n        }, 5000);\n    }\n\n    handleMarkerClick = () => {\n        this.delayedShowMarker();\n    }\n    \n    createAxiosInstance(token) {\n        axiosInstance = axios.create({\n            baseURL: apiURL,\n            timeout: 1000,\n            headers: {\"Authorization\": \"Bearer \" + token}\n        });\n    }\n\n    getGeoLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    this.setState( (prevState) => ({\n                        currentLatLng: {\n                            ...prevState.currentLatLng,\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        }\n                    }));\n                }\n            );\n        }\n        else {\n            console.log(\"ERROR GETTING LOCATION\");\n        }\n\n    }\n\n\n    render() {\n\n        if (this.state.loaded === false) {\n            this.getPointsFromApi();\n            return(\n                <h1>Loading!</h1>\n            );\n        }else{\n            return (\n\n            <MapComponent\n                    isMarkerShown={this.state.isMarkerShown}\n                    onMarkerClick={this.handleMarkerClick}\n                    currentLocation={this.state.currentLatLng}\n                    markers = {<PointList pointsList ={this.state.markerList} />}\n                />\n            );}\n    }\n\n    getPointsFromApi() {\n        let markerList= [];\n        axiosInstance.get(\"/map/points\").then((response) => {\n            markerList = response.data;\n            this.setState({markerList: markerList});\n            localStorage.setItem(\"Markers\", markerList);\n            this.setState({\n                loaded : true\n            });\n        }).catch((error) => {\n                console.log(error);\n            }\n        );\n\n    }\n}\n\nexport default MapView;\n\nconst apiURL = ((window.location.hostname === \"localhost\") ? \"http://localhost:8080\" : \"https://myuniapp-back.herokuapp.com\");\nvar axiosInstance;"]},"metadata":{},"sourceType":"module"}